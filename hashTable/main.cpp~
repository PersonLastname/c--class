
/*
Author: Bryce Truong
Date Created: 3/3/22
Last Modified: 3/9/22
This is a program.
*/

#include <iostream>
#include <cstring>
#include <cctype>
#include <stdio.h>
#include <ctype.h>
#include <stdlib.h>

#include "Node.h"

using namespace std;

int getHashIndex(Node * toHash);

int main() {

  bool running = true;
  
  char input[50];
  
  int hashTableSize = 100;
  Node * hashTable[hashTableSize];

  while (running) {
    
    cout << "Enter mode: \n\t-ADD\n\t-DELETE\n\t-PRINT\n\t-QUIT" << endl;
    cin.getline(input, 50, '\n');
    if (strcmp(input, "ADD") == 0 || strcmp(input, "a") == 0) {
      Node * temp = new Node();

      cout << "Enter Student Firstname: ";
      cin.getline(input, 50, '\n');
      temp -> setfname(input);
      
      cout << "Enter Student Lastname: ";
      cin.getline(input, 50, '\n');
      temp -> setlname(input);
	
      cout << "Enter Student ID: ";
      cin.getline(input, 50, '\n');
      temp -> setID(atoi(input));

      hashTable[getHashIndex(temp)] = temp;
      
      /*
      cout << "Enter Student GPA: ";
      cin.getline(input, 50, '\n');
      temp -> setID(atoi(input));
      */
      
    } else if (strcmp(input, "DELETE") == 0) {
      
    } else if (strcmp(input, "QUIT") == 0 || strcmp(input, "q") == 0) {
      running = false;
    } else if (strcmp(input, "PRINT") == 0 || strcmp(input, "p") == 0) {
      cout << hashTable[99] -> getlname() << endl;
    } else if (strcmp(input, "rand") == 0) {

    }
  }
}

int getHashIndex(Node * toHash) {
  char * fname = toHash -> getfname();
  char * lname = toHash -> getlname();
  int ID = toHash -> getID();
  
  int index = 0;
  
  int i = 0;
  while(fname[i] != '\0') {
    index += fname[i];
    cout << fname[i] << endl;
    i++;
  }
  i = 0;
  while(lname[i] != '\0') {
    index += lname[i];
    i++;
  }
  index += ID;
  cout << index % 100 << endl;
  return index % 100;
}
